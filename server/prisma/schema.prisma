// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User{
   id Int @default(autoincrement()) @id
   email String @unique
   password_hash String
   role Role @default(USER) 
   requests Request[]
   @@map("user")
} 

model Type{
  id Int @default(autoincrement()) @id
  title String
  cars Car[]
}

model Car{
  id Int @default(autoincrement()) @id
  title String

  description String
  price String
  img String

  type Type @relation(fields: [typeId], references: [id] , onDelete: Cascade)
  typeId Int
  requests Request[]

}


model Request{
  id Int @default(autoincrement()) @id

  phoneNumber String

  name String

  description String

  status String @default("PENDING")

  date DateTime

  duraction Int

  adress String

  user User @relation(fields: [userId], references: [id]) 
  userId Int


  car Car? @relation(fields: [carId], references: [id])
  carId Int? 

  comment Comment?

}
 

model Comment{
  id Int @default(autoincrement()) @id

  request Request @relation(fields: [requestId], references: [id])
  requestId Int @unique 

  text String

  isPublished Boolean @default(false)
}





enum Role{
  USER 
  ADMIN
}